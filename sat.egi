(define $deleteClausesWith
  (lambda [$ls $cnf]
    (match-all [ls cnf] [(multiset integer) (list (multiset integer))]
      [[<cons $l _> <join _ <cons (& !<cons ,l _> $c) _>>] c])))

(define $resolveOn
  (lambda [$v $cnf]
    (match-all cnf (multiset (multiset integer))
      [<cons <cons ,v (and <cons $l _> $xs)>
        <cons <cons ,(neg v) (and !<cons ,(neg l) _> $ys)>
          _>>
       {@xs @ys}])))

(define $sat
  (lambda [$vars $cnf]
    (match [vars cnf] [(multiset integer) (multiset (multiset integer))]
      {[[_ <nil>] #t]
       [[_ <cons <nil> _>] #f]
       [[_ <cons <cons $l <nil>> _>] (sat (delete (abs l) vars) (deleteClausesWith {l} cnf))]
       [[<cons $v $vs> !<cons <cons ,(neg v) _> _>] (sat vs (deleteClausesWith {v} cnf))]
       [[<cons $v $vs> !<cons <cons ,v _> _>] (sat vs (deleteClausesWith {(neg v)} cnf))]
       [[<cons $v $vs> _] (sat vs (resolveOn v (deleteClausesWith {v (neg v)} cnf)))]
       })))

(sat {1 2 3} {{1 2} {-1 3} {-1 -3}})